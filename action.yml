name: 'PyBuilder Action'
description: 'PyBuilder Composite GitHub Action'
branding:
  icon: zap
  color: blue
inputs:
  checkout:
    description: 'Do checkout first'
    required: false
    default: 'true'
  install-python:
    description: 'Whether to install Python'
    required: false
    default: 'true'
  homebrew-python:
    description: 'Whether Python should be installed via Homebrew'
    required: false
    default: 'false'
  python-version:
    description: 'Python version to use, if installing'
    required: false
    default: '3.9'
  architecture:
    description: 'Install Python for specific architecture, if installing'
    required: false
    default: x64
  with-venv:
    description: 'Whether to use Virtualenv during a build'
    required: false
    default: 'true'
  install-pyb:
    description: 'Install PyBuilder'
    required: false
    default: 'true'
  pyb-version:
    description: 'PyBuilder version to install'
    required: false
    default: '>=0.12.0'
  pyb-command:
    description: 'Command to run PyBuilder'
    required: false
    default: 'pyb'
  pyb-args:
    description: 'PyBuilder command line arguments'
    required: false
    default: "-E ci -v -X analyze install"
  pyb-extra-args:
    description: 'PyBuilder extra command line arguments'
    required: false
    default: ""
runs:
  using: "composite"
  steps:
    - name: Configure Python Executable
      shell: bash
      run: |
        PV='${{inputs.python-version}}'
        PV="${PV##pypy-}"
        echo "PYTHON=python${PV%%.*}" >> $GITHUB_ENV
    - name: Checkout
      uses: ChristopherHX/conditional@main
      with:
        if: ${{inputs.checkout == 'true'}}
        step: |
          uses: actions/checkout@v2
    - name: Setup Python
      uses: ChristopherHX/conditional@main
      with:
        if: ${{ inputs.install-python == 'true' && (runner.os != 'macOS'|| inputs.homebrew-python != 'true') }}
        step: |
          uses: actions/setup-python@v2
          with:
            python-version: ${{ inputs.python-version }}
            architecture: ${{ inputs.architecture }}
    - name: Setup Python with Homebrew
      shell: bash
      run: |
        if ! [ '${{inputs.install-python}}' == 'true' -a '${{runner.os}}' == 'macOS' -a '${{inputs.homebrew-python}}' == 'true' ]; then exit 0; fi
        bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        brew reinstall python@${{ inputs.python-version }}
        echo "/usr/local/opt/python@${{ inputs.python-version }}/bin" >> $GITHUB_PATH
    - name: Create VEnv
      shell: bash
      run: |
        if ! [ '${{inputs.with-venv}}' == 'true' ]; then exit 0; fi
        $PYTHON -m pip install virtualenv
        virtualenv $HOME/.pyb
        echo "$HOME/.pyb/bin" >> $GITHUB_PATH
    - name: Python Check
      shell: bash
      run: |
        pwd
        which $PYTHON
        $PYTHON --version
        $PYTHON -m pip --version
    - name: Install PyBuilder
      shell: bash
      run: |
        if ! [ '${{inputs.install-pyb}}' == 'true' ]; then exit 0; fi
        $PYTHON -m pip install 'pybuilder${{ inputs.pyb-version }}'
        which pyb
        pyb --version
    - name: Build
      shell: bash
      run: ${{ inputs.pyb-command }} ${{ inputs.pyb-args }} ${{ inputs.pyb-extra-args }}
